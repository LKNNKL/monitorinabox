---
# This role provides reusable secure nginx configuration which can be applied
# everywhere nginx is used. It configures secure SSL cipher suites and protocols
# and enables HSTS with a (by default) 5 minute timeout (which should be increased
# in a production setting.)
#
# In the event that existing certificates are not provided to this role, snakeoil
# certificates will be created and symlinked into /etc/ssl to ensure that all
# ssl-depndent services come up correctly, and that production certificates can
# be swapped in (e.g. with letsencrypt) without the need to change any other
# system or service configuration.

- name: Include {{ ansible_os_family }} specific vars
  include_vars: "{{ item }}"
  with_first_found:
    - "{{ ansible_distribution }}_{{ ansible_distribution_major_version }}.yml"
    - "{{ ansible_distribution }}.yml"
    - "{{ ansible_os_family }}.yml"
  tags: vars

- name: Install Common Packages
  environment:
    DEBIAN_FRONTEND: noninteractive
  package: name={{ item }} state=installed
  with_items: "{{ common_nginx_packages }}"

- name: Create nginx user www-data
  user: name=www-data
        createhome=no

- name: Install nginx configuration
  template: src=nginx.conf.j2 dest=/etc/nginx/nginx.conf mode=640 owner=root
  notify: nginx

- name: Create nginx sites-available and sites-enabled directories
  file: path={{ item }}
        state=directory
        owner=root
        group=root
        mode=755
  with_items:
    - /etc/nginx/sites-available
    - /etc/nginx/sites-enabled

############ Factor out into SSL keys + Certs yml
- name: Create secure diffie-hellman parameters
  command: openssl dhparam -out /etc/ssl/dhparam.pem 2048
  async: 450
  poll: 30
  args:
    creates: /etc/ssl/dhparam.pem


############ Factor out into SSL keys + Certs yml
- name: Remove default nginx site configuration
  file: path=/etc/nginx/sites-enabled/default state=absent
  notify: nginx

- name: Apply more secure nginx ssl config
  template: src=ssl.conf.j2 dest=/etc/nginx/conf.d/ssl.conf mode=640 owner=root
  notify: nginx

- name: Install nginx catch-all for invalid virtual servers
  template: src=05-no-ip-virtual-hosts.conf.j2
            dest=/etc/nginx/sites-available/05-no-ip-virtual-hosts.conf
  notify: nginx

- name: Enable nginx catch-all for invalid virtual servers
  file: src=/etc/nginx/sites-available/05-no-ip-virtual-hosts.conf
        dest=/etc/nginx/sites-enabled/05-no-ip-virtual-hosts.conf
        state=link
  notify: nginx

- name: Install ssl certificate
  copy: content={{ ssl_crt }}
        dest={{ ssl_crt_filepath }}
        owner=root
        group=root
        mode=0444
  when: ssl_crt is defined and ssl_crt_filepath is defined
  notify: nginx

- name: Install ssl key
  copy: content={{ ssl_key }}
        dest={{ ssl_key_filepath }}
        owner=root
        group=root
        mode=0400
  when: ssl_key is defined and ssl_key_filepath is defined
  notify: nginx

- name: Ensure that /etc/ssl/private exists
  file: path=/etc/ssl/private
        state=directory
        owner=root
        group=root
        mode=0750

- name: Ensure SSL snakeoil certs exist (for nginx boostrapping)
  shell: >-
    openssl req -x509 -newkey rsa:2048 -nodes
    -subj "/CN=snakeoil/C=NA/ST=NA/L=NA/O=NA/OU=NA"
    -keyout /etc/ssl/private/ssl-cert-snakeoil.key
    -out /etc/ssl/certs/ssl-cert-snakeoil.pem
    -days 3650
  args:
    creates: /etc/ssl/private/ssl-cert-snakeoil.key

- name: Set correct permissions on ssl-cert-snakeoil.key
  file: path=/etc/ssl/private/ssl-cert-snakeoil.key
        owner=root
        group=root
        mode=440

- name: Place Snakeoil SSL certificate in /etc/ssl
  file: src=/etc/ssl/certs/ssl-cert-snakeoil.pem
        dest=/etc/ssl/{{ inventory_hostname }}.crt
        state=link
  when: ssl_key is undefined

- name: Place Snakeoil SSL private key in /etc/ssl
  file: src=/etc/ssl/private/ssl-cert-snakeoil.key
        dest=/etc/ssl/{{ inventory_hostname }}.key
        state=link
  when: ssl_key is undefined

- name: Open http port
  firewalld: service=http permanent=true state=enabled immediate=true

- name: Open https port
  firewalld: service=https permanent=true state=enabled immediate=true


# Safety precaution that ensures that all handlers are triggered in the event
# that a task fails and the handlers are then lost.
- meta: flush_handlers
